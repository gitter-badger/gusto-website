$gusto: #F34A2C;
$poliana: #68CAD0;
$onthelist: #FEC40E;
$jumpstart: #F7941F;
$blue: #16597A;
$green: #B1BE36;
$white: #F5F5F5;
$black: #2D2D2D;
$lightgray: #DDD;
$darkgray: #858585;

$change: 10%;
$time: 0.2s;

$brandon: 'Brandon Grotesque', 'brandon-grotesque', 'proxima-nova', 'Helvetica Neue', Helvetica, Arial, sans-serif;
$proxima: 'Proxima Nova', 'proxima-nova', 'Helvetica Neue', Helvetica, Arial, sans-serif;
$corner: 'CornerStoreJF', 'corner-store', 'proxima-nova', 'Helvetica Neue', Helvetica, Arial, sans-serif;

@mixin box-shadow-working($hoff, $zoff, $blur, $color) {
  -webkit-box-shadow: $hoff $zoff $blur $color;
  -moz-box-shadow:    $hoff $zoff $blur $color;
  box-shadow:         $hoff $zoff $blur $color;
}

@mixin border-radius-working($radius) {
  -webkit-border-radius: $radius;
  -khtml-border-radius:  $radius;
  -moz-border-radius:    $radius;
  border-radius:         $radius;
}

@mixin background-size-working($size) {
  -webkit-background-size: $size;
  -moz-background-size: $size;
  background-size: $size;
}

$fonts: (
  brandon-grotesque $brandon,
  proxima-nova $proxima,
  corner-store $corner
);

@mixin font-classes() {
  @each $font in $fonts {
    .#{nth($font, 1)} {
      font-family: nth($font, 2);

      @if(nth($font, 1) == "brandon-grotesque") { text-transform: uppercase; }
      @else { text-transform: none; }
    }
  }
}

$colors: (
  gusto $gusto,
  poliana $poliana,
  otl $onthelist,
  jsf $jumpstart,
  blue $blue,
  green $green,
  white $white,
  black $black,
  lightgray $lightgray,
  darkgray $darkgray
);

@mixin color-classes() {
  @each $color in $colors {
    // Default hover color
    $hover-color: $black;
    $second-hover-color: $black;

    // Determine hover color
    @if lightness(nth($color, 2)) < 50% {
      $hover-color: lighten(nth($color, 2), $change);
      $second-hover-color: lighten(nth($color, 2), $change * 2);
    }
    @else {
      $hover-color: darken(nth($color, 2), $change);
      $second-hover-color: darken(nth($color, 2), $change * 2);
    }

    // Text color
    .#{nth($color, 1)}-text-color { color: nth($color, 2); }

    // Link color
    a.#{nth($color, 1)}-text-color {
      color: nth($color, 2);
      &:hover { color: $hover-color; }
    }

    // Background
    .#{nth($color, 1)}-background-color { background: nth($color, 2); }

    // Drop shadow
    .#{nth($color, 1)}-background-shadow { @include box-shadow-working(0px, 1px, 0px, nth($color, 2)); }

    // Text shadow
    .#{nth($color, 1)}-text-shadow { @include text-shadow(0px 1px 0px $hover-color); }

    // Text shadow on links
    a.#{nth($color, 1)}-text-shadow {
      @include text-shadow(0px 1px 0px $hover-color);
      &:hover { @include text-shadow(0px 1px 0px $second-hover-color); }
    }
  }
}

@mixin spacing-classes() {
  @for $i from 1 through 10 {
    $small: $i * 5px;
    $large: $i * 10px;

    .vertical-padding-#{$i * 10} {
      padding: $small inherit;
      @media #{$medium-up} { padding: $large inherit; }
    }
    .horizontal-padding-#{$i * 10} {
      padding: inherit $small;
      @media #{$medium-up} { padding: inherit $large; }
    }
    .vertical-margin-#{$i * 10} {
      margin: $small inherit;
      @media #{$medium-up} { margin: $large inherit; }
    }
    .horizontal-margin-#{$i * 10} {
      margin: inherit $small;
      @media #{$medium-up} { margin: inherit $large; }
    }
  }
}
